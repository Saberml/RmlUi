name: CMake

on: [push]

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    name: Build on ${{ matrix.os }}
    
    runs-on: ${{ matrix.os }}
    
    env:
      BUILD_TYPE: Release
      BUILD_TESTING: ${{ matrix.BUILD_TESTING }}
      NO_FONT_INTERFACE_DEFAULT: ${{ matrix.NO_FONT_INTERFACE_DEFAULT }}
      DISABLE_RTTI_AND_EXCEPTIONS: ${{ matrix.DISABLE_RTTI_AND_EXCEPTIONS }}
      NO_THIRDPARTY_CONTAINERS: ${{ matrix.NO_THIRDPARTY_CONTAINERS }}
  
    strategy:
      matrix:
        BUILD_TESTING: "OFF"
        NO_FONT_INTERFACE_DEFAULT: "OFF"
        DISABLE_RTTI_AND_EXCEPTIONS: "OFF"
        NO_THIRDPARTY_CONTAINERS: "OFF"
        include:
          - os: ubunutu-latest
            BUILD_TESTING: "ON"
          - os: ubunutu-latest
            NO_FONT_INTERFACE_DEFAULT: "ON"
          - os: ubunutu-latest
            DISABLE_RTTI_AND_EXCEPTIONS: "ON"
            NO_THIRDPARTY_CONTAINERS: "ON"
          - os: macos-latest

    steps:
    - uses: actions/checkout@v2
      
    - name: Install Dependencies
      runs-on: ubuntu-latest
      run: sudo apt-get install cmake ninja-build libsdl2-dev libsdl2-image-dev libfreetype6-dev libglew-dev liblua5.2-dev libsfml-dev librlottie-dev
      
    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/Build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/Build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_LUA_BINDINGS=ON -DBUILD_SAMPLES=ON -DBUILD_TESTING=ON -DWARNINGS_AS_ERRORS=ON

    - name: Build
      working-directory: ${{runner.workspace}}/Build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{runner.workspace}}/Build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE
